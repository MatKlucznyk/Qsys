#SYMBOL_NAME "Qsys Named Control Driver"

#INCLUDEPATH "..\\QscQsys\\bin\\Debug"
#USER_SIMPLSHARP_LIBRARY "QscQsys"

Digital_Input ButtonOn, ButtonOff, ButtonMomentary, ButtonToggle, Trigger;
Analog_Input ValueUnsigned, ValueSigned, RampTimeMS;
String_Input StringSet[255];

Digital_Output ButtonIsOn, ButtonIsOff, _skip_, _skip_, Triggered;
Analog_Output ValueUnsignedOut, ValueSignedOut, _skip_;
String_Output StringOut;
                          
QsysProcessorSimplInterface processor;                          
QsysNamedControlSimpl ctrl;

String_Parameter _skip_,_skip_,_skip_,_skip_,_skip_,_skip_, _skip_, _skip_, _skip_, _skip_, Control_Name[100];
integer_parameter NamedControlType, DefaultQsysRampTimeMS, Val_Minimum, Val_Maximum;

integer currentValUS;
signed_integer currentValS;

Push ButtonOn
{
    
}

push ButtonOff
{

}

push ButtonToggle
{

}

push ButtonMomentary
{

}
release ButtonMomentary
{
   
}

push Trigger
{

}

Threadsafe Change ValueUnsigned
{
    integer x;
    // While(x != Volume)
    // {
    //    x = Volume;
    //     fader.Volume(Volume);
    // }
}

Threadsafe Change ValueSigned
{
    // integer x;
    // While(x != Volume_db)
    // {
    //    x = Volume_db;
    //     fader.VolumeDb(Volume_db);
    // }
}

Change RampTimeMS
{
    ctrl.RampTimeMS(RampTimeMS);
}

Callback Function onInitializationComplete(integer value)
{        
}
Callback Function onValueChange(integer value, signed_integer valueDb)
{
    currentValUS = value;
    currentValS = valueDb;
    ValueUnsignedOut = currentValUS;
    ValueSignedOut = currentValS;
}
Callback Function onStateChange(integer value)
{
    switch(value)
    {
       case (1):
       {
           ButtonIsOff = OFF;
           ButtonIsOn = ON;
       }
       case (0):
       {
           ButtonIsOff = ON;
           ButtonIsOn = OFF;
       }
    }
}
Callback Function onStringChange(string value)
{
    StringOut = value;
}

Function Main()
{              
    RegisterDelegate(processor, onIsRegistered, onInitializationComplete);
    RegisterDelegate(ctrl, newValueChange, onValueChange);
    RegisterDelegate(ctrl, newStateChange, onStateChange);
    RegisterDelegate(ctrl, newStringChange, onStringChange);
    ctrl.Initialize(Control_Name, NamedControlType);                                 
    ctrl.RampTimeMS(DefaultQsysRampTimeMS);
}
